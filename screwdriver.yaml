
shared:
    image: golang:latest
    environment:
        GOPATH: /sd/workspace
        
jobs:
    detached:
        steps:
            - meta get foo bar
    detached_second:
        requires: detached
        steps:
            - meta get foo
    no_main:
        template: minz/nodejs_main
        requires: [~commit, ~pr, ~sd@241:main]
        steps:
            - preinstall: echo $SD_TEMPLATE_NAME && echo $SD_TEMPLATE_VERSION && env && woierulf
        settings:
            slack: 
              - test-slack-notif
              - test-slack-min
    publish:
       requires: no_main
       steps:
           - print: echo running publish
    other_publish:
       requires: wow_new_main
       steps:
           - print: echo running other_publish
    wow_new_main:
       image: python
       requires: [~pr,~commit, ~sd@241:main]
       steps:
           - test: python test.py && ps aux 
           - sonar: if [ `uname` = 'Darwin' ]; then echo code coverage not implemented for ios && exit 0; fi && if ![ -f sonar-project.properties ]; then echo "No sonar-project.properties file detected. Please check the doc." && exit 0; fi && export SD_CURL_CMD_WRAPPER="$(echo 'sd-step exec --pkg-version 7.54.1 core/curl')" && export SD_UNZIP_CMD_WRAPPER="$(echo 'sd-step exec --pkg-version 6.0 core/unzip')" && $SD_CURL_CMD_WRAPPER "curl -o ./sonarscanner.zip -L https://sonarsource.bintray.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.1.0.1141-linux.zip" && $SD_UNZIP_CMD_WRAPPER "unzip -q ./sonarscanner.zip" && sonar-scanner-3.1.0.1141-linux/bin/sonar-scanner -Dsonar.host.url=https://sonar.screwdriver.cd -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey="job:$SD_JOB_ID" -Dsonar.projectName="$SD_PIPELINE_NAME:$SD_JOB_NAME" || true
       secrets:
           - SONAR_TOKEN
